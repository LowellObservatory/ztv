# URGENT - before next release

## Work through lots of example fits file inputs and make reading more robust, e.g. barfing on nirspec and pharo data currently



# Desirable before next release

## re-consider which color maps to include

[based on:](https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/)

## better document ActiveMQ usage/example/etc

## rename fake_fits_maker.py & document it better

## Write up 'motivation' document referring back to atv (and to ds9 etc etc)

## think through colors of cursor boxes etc and making them make some sort of justifiable sense


# Medium high-priority for some future release:

## better 'auto' algorithm for min/max determination

## ability to do masked numpy arrays with different color value for masked positions

## in "Show FITS header" search box is using strict capitalization - Should it allow sloppy capitalization?

## Make which control panels are loaded optional, including a 'default' group.

See ztv.ControlPanels class.

## found: problem when auto-loading fits files that typing into curfile/curdir fields is pain in the butt as cursor keep smoving.  think it's an issue in "on_fitsfile_loaded"???


## To color control panel:  add a histogram panel with click-and-drag min/max markers


## Allow enabling/disabling of components of SourcePanel at startup

- allow enable/disable of ActiveMQ in SourcePanel at startup (default = off?) 
- Allow enable/disable of Auto-load file in SourcePanel at startup (default = on?) 

## Fix bugs "deviceDeltaX" [Y] is deprecated, & continuousScroll is deprecated

e.g.:

    In [60]: 2015-03-24 08:57:59.055 Python[8660:1232061] -_continuousScroll is deprecated for NSScrollWheel. Please use -hasPreciseScrollingDeltas.
    2015-03-24 08:57:59.055 Python[8660:1232061] -deviceDeltaX is deprecated for NSScrollWheel. Please use -scrollingDeltaX.
    2015-03-24 08:57:59.055 Python[8660:1232061] -deviceDeltaY is deprecated for NSScrollWheel. Please use -scrollingDeltaY.


# Low priority for some future release:

## consider:  in Source panel->Autoload, should dir/file be combined in to single field?

## in source panel fields:  tab to complete doesn't work at first attempt in fields after clicking.  have to type a character first.  After that behavior is correct.  (launch ztv; click in a field, hit tab.  nothing.  type a character (even not matching), delete it, hit tab -> works)

## is error checking behavior of Source Panel->Current FITS file correct?  seems to error check only upon Return key.  Not actively as you type.  Meanwhile the auto-load file fields work correctly, updating color clues in real time.

## Source Panel->Autoload-file:  auto-redistribute filename vs. directory to Dir/Filename (is there some use case where you don't want to 'correct' the user?)

## Tab to complete in Source Panel->Current FITS file is not working currently (is in auto-load file fields)

## Tab to complete in Source panel fields:  shift-Tab should step back (in case you went past completion you wanted)

## consider:  what color should be used for blank/fill space in ImagePanels?  (currently white, but should it be black? adjustable?)

## design & implement global keyboard shortcuts, e.g. cmd-o for opening a file

## allow 'hiding' of source panel, but having pre-set ActiveMQ or auto-load file?? (less certain this needed than enable/disable individual components?)

## fix that ctrl-c in ipython is killing ztv gui, even when run via a separate process with ztv_api

## consider in color panel:  do other colormap scalings make sense?

## access catalogs (local & internet) and overplot

Problem:

    import ztv
    z = ztv.ZTV()
    # now do some other things
    # and hit ctrl-c
    # kills the subprocess'd ztv gui
    
I think fix will be around the `ztv_api.py` line that launches ztv with: `subprocess.Popen`.

