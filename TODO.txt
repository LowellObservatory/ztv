# URGENT - before next release

## Write up 'motivation' document referring back to atv (and to ds9 etc etc)



# Desirable before next release

## move fake_fits_maker.py into an example control panel

## think through colors of cursor boxes etc and making them make some sort of justifiable sense

## some basic implementation of 3-d images, at least reading in from fits files



# Medium high-priority for some future release:

## careful examination of slice plots and whether limits and exact paths across pixels are correct

## re-consider which color maps to include

[based on:](https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/)

## better document ActiveMQ usage/example/etc

## add keyboard shortcuts to line/column plots (x/l and y/c) in plot mode

Probably build this in to ztv.py and send new_slice_plot_xy[0/1] messages.  But, need to figure out how to get current matplotlib cursor coordinates when it's not a mouse event...

## control panel for drawing/managing shapes (lines, boxes, circles)

## think through overplotting colors, e.g. slice plot vs stats etc

want sensible, don't want garish  (some way to link to the panels?  background colors? underlining of titles on tabs?)

## better 'auto' algorithm for min/max determination

## ability to do masked numpy arrays with different color value for masked positions

## found: problem when auto-loading fits files that typing into curfile/curdir fields is pain in the butt as cursor keep smoving.  think it's an issue in "on_fitsfile_loaded"???

## consider in color panel: convert to using color stretches from astropy.visualization & add more

## To stats panel:  add ability to choose "recent" selection areas (e.g. switch back and forth between some different areas)

## Allow enabling/disabling of components of SourcePanel at startup

- allow enable/disable of ActiveMQ in SourcePanel at startup (default = off?) 
- Allow enable/disable of Auto-load file in SourcePanel at startup (default = on?) 

## Fix bugs "deviceDeltaX" [Y] is deprecated, & continuousScroll is deprecated

e.g.:

    In [60]: 2015-03-24 08:57:59.055 Python[8660:1232061] -_continuousScroll is deprecated for NSScrollWheel. Please use -hasPreciseScrollingDeltas.
    2015-03-24 08:57:59.055 Python[8660:1232061] -deviceDeltaX is deprecated for NSScrollWheel. Please use -scrollingDeltaX.
    2015-03-24 08:57:59.055 Python[8660:1232061] -deviceDeltaY is deprecated for NSScrollWheel. Please use -scrollingDeltaY.


## generic pass through of parameters for typical `z = ztv.ZTV()` launching

add to:
    class ZTVMain()  # in ztv.py
    class ZTV.__init__()   #  in ztv_api.py
    
Is probably straightforward for simple things like minval, or even string filenames to load a fits file.  But, gets complicated quickly if passing numpy arrays for display.  Will need to think about how to do.  Or, whether to just do limited subset.  

Another issue is visibility - how to make it clear to user what one can do?  That's an argument for the extra complexity (and less flexibility) of just manually specifiying what can be passed through.





# Low priority for some future release:

## in source panel, with hiding/showing GUI elements, ideally should have everything dynamically re-arrange

## To color control panel:  add a histogram panel with click-and-drag min/max markers

## To stats panel:  add ability to switch between circle (ellipse?) and box.  

need to think through how circle defined - click cneter and drag out?  Confined within click-drag box (works better for ellipses?)

## crisper 'historgram' style plotting for slice plots when really zoomed in

## Clean-up layout in Phot panel  (e.g. align fields in output part & create a minimum initial size for the plot panel)

## run through a syntax checker and cleanup most/all objections (e.g. "x*y" vs. "x * y")

## in stats panel:  fix vertical alignment of "# pixels" field and text label.  should be centered on the two input rows.

## consider:  in Source panel->Autoload, should dir/file be combined in to single field?

## in source panel fields:  tab to complete doesn't work at first attempt in fields after clicking.  have to type a character first.  After that behavior is correct.  (launch ztv; click in a field, hit tab.  nothing.  type a character (even not matching), delete it, hit tab -> works)

## is error checking behavior of Source Panel->Current FITS file correct?  seems to error check only upon Return key.  Not actively as you type.  Meanwhile the auto-load file fields work correctly, updating color clues in real time.

## Source Panel->Autoload-file:  auto-redistribute filename vs. directory to Dir/Filename (is there some use case where you don't want to 'correct' the user?)

## Tab to complete in Source Panel->Current FITS file is not working currently (is in auto-load file fields)

## Tab to complete in Source panel fields:  shift-Tab should step back (in case you went past completion you wanted)

## consider:  what color should be used for blank/fill space in ImagePanels?  (currently white, but should it be black? adjustable?)

## design & implement global keyboard shortcuts, e.g. cmd-o for opening a file

## access catalogs (local & internet) and overplot

## Consider re-vamping method of monitoring for new/changed FITS files on disk

[e.g. see](https://github.com/joh/when-changed)

## fix that ctrl-c in ipython is killing ztv gui, even when run via a separate process with ztv_api

Problem:

    import ztv
    z = ztv.ZTV()
    # now do some other things
    # and hit ctrl-c
    # kills the subprocess'd ztv gui
    
I think fix will be around the `ztv_api.py` line that launches ztv with: `subprocess.Popen`.

